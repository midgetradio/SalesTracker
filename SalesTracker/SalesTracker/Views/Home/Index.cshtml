@model SalesTracker.ViewModels.HomeVM

@{
    ViewData["Title"] = "Sales Tracker";
}

<div class="container pt-2">

    <input hidden asp-for="@Model.SelectedIndex" />
    <div class="row">
        <div class="col-6">
            <label for="dateList" class="form-label">Titles added since:</label>
            <select class="form-control-sm d-inline" name="dates" id="dateList" onchange="dateInputChange()">
                <option value="All Time">All Time</option>
                @foreach (var item in Model.Dates)
                {
                    <option value="@item.Date.ToShortDateString()">@item.Date.ToShortDateString()</option>
                }
            </select>
            <span id="count">Count: @Model.Editions.Count()</span>
        </div>

        <div class="col-6 text-end">
            <button onclick="sortRows('price')">Sort By Price</button>
            <button onclick="sortRows('discount')">Sort By Discount</button>
            <button onclick="sortRows('title')">Sort By Title</button>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-6 text-center">
            <a asp-action="Removed">Titles Recently Removed</a>
        </div>

        <div class="col-6 text-end">
            <input type="checkbox" id="redTag" checked onclick="filterSaleTypes()" />
            <label for="redTag">Red Tag</label>

            <input type="checkbox" id="damages" checked onclick="filterSaleTypes()" />
            <label for="damages">Damages</label>

            <input type="checkbox" id="clearance" checked onclick="filterSaleTypes()" />
            <label for="clearance">Clearance</label>

        </div>

    </div>

    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>Title</th>
                <th>Price</th>
                <th>Discount</th>
                <th>Sale Type</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody id="sales-list-tbody">
            @foreach(var item in Model.Editions)
            {
                <tr>
                    <td>
                        <a href="@("https://www.instocktrades.com" + item.URL)" target="_blank">@item.Title</a>
                    </td>
                    <td>@item.Price</td>
                    <td>@item.Discount</td>
                    <td>@item.SaleType.Type</td>
                    <td>@item.LastUpdated.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    let rowData = [];

    $("document").ready(function() {
        let dateInput = document.getElementById("dateList");
        let selectedIndex = document.getElementById("SelectedIndex").value;
        dateInput.selectedIndex = selectedIndex;
        rowData = getRows();
    });

    function dateInputChange() {
        let dateInput = document.getElementById("dateList");
        if(dateInput.value != "") {
            window.location.href = window.location.origin + "?date=" + dateInput.value + "&index=" + dateInput.selectedIndex;
        }
    }

    function getRows() {
        let body = document.getElementById("sales-list-tbody");
        for(let i = 0; i < body.rows.length; i++) {
            let row = new Object();
            row.title = body.rows[i].children[0].innerText;
            row.url = body.rows[i].children[0].children[0].href;
            row.price = body.rows[i].children[1].innerText;
            row.discount = body.rows[i].children[2].innerText;
            row.salesType = body.rows[i].children[3].innerText;
            rowData.push(row);
        }

        return rowData;
    }

    function clearTable() {
        let body = document.getElementById("sales-list-tbody");
        while(body.rows.length != 0) {
            body.deleteRow(0);
        }
    }

    function sortRows(sortType) {
        switch(sortType) {
            case "price":
                rowData.sort(priceSort);
                break;
            case "discount":
                rowData.sort(discountSort);
                break;
            case "title":
                rowData.sort(titleSort);
                break;
            default:
                break;
        }


        let selectedSaleTypes = getSelectedSaleTypes();
        populateTable(selectedSaleTypes);
    }

    function getSelectedSaleTypes() {
        let selectedSaleTypes = [];

        let rt = document.getElementById("redTag");
        let d = document.getElementById("damages");
        let c = document.getElementById("clearance");

        rt.checked ? selectedSaleTypes.push(rt.labels[0].textContent) : null;
        d.checked ? selectedSaleTypes.push(d.labels[0].textContent) : null;
        c.checked ? selectedSaleTypes.push(c.labels[0].textContent) : null;

        return selectedSaleTypes;
    }

    function populateTable(selectedSaleTypes) {
        clearTable();
        let body = document.getElementById("sales-list-tbody");

        for (let i = 0; i < rowData.length; i++) {
            if(selectedSaleTypes.length == 3) {
                updateCount(rowData.length);
                addRow(body, i);
            }
            else {
                for (let j = 0; j < selectedSaleTypes.length; j++) {
                    if (rowData[i].salesType == selectedSaleTypes[j]) {
                        addRow(body, i);
                    }
                }
                updateCount(body.childElementCount);
            }
        }
    }

    function addRow(body, i) {
        let row = body.insertRow();
        let titleCell = row.insertCell();
        let a = document.createElement("a");
        a.setAttribute("href", rowData[i].url);
        a.setAttribute("target", "_blank");
        a.textContent = rowData[i].title;
        titleCell.appendChild(a);
        let priceCell = row.insertCell();
        priceCell.innerText = rowData[i].price;
        let discountCell = row.insertCell();
        discountCell.innerText = rowData[i].discount;
        let typeCell = row.insertCell();
        typeCell.innerText = rowData[i].salesType;
    }

    function updateCount(count) {
        let count_div = document.getElementById("count");
        count_div.innerText = "Count: " + count;
    }

    var priceSort = function (x, y) {
        let price_x = parseFloat(x.price.slice(1));
        let price_y = parseFloat(y.price.slice(1));

        if (price_x < price_y) {
            return -1;
        }
        if (price_x > price_y) {
            return 1;
        }
        return 0;
    }

    var titleSort = function (x, y) {
        if (x.title < y.title) {
            return -1;
        }
        if (x.title > y.title) {
            return 1;
        }
        return 0;
    }

    var discountSort = function (x, y) {
        if (x.discount < y.discount) {
            return -1;
        }
        if (x.discount > y.discount) {
            return 1;
        }
        return 0;
    }

    function filterSaleTypes() {
        let selectedSaleTypes = getSelectedSaleTypes();
        populateTable(selectedSaleTypes);
    }


</script>